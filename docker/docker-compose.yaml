name: sys-db-replication

services:
  thordb:
      container_name: thordb
      hostname: thordb
      image: postgres:alpine
      volumes:
        - thor-data:/var/lib/postgresql/data
        - ${PWD}/src/configs/postgresql.conf:/usr/local/share/postgresql/postgresql.conf.sample
        - ${PWD}/src/scripts/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: thordb2024
        POSTGRES_DB: sinarm
      restart: unless-stopped
      networks:
        - sys_db_network

  mjolnirdb:
      image: postgres:alpine
      container_name: mjolnirdb
      hostname: mjolnirdb
      volumes:
        - mjolnir-data:/var/lib/postgresql/data
        - ${PWD}/src/configs/postgresql.conf:/usr/local/share/postgresql/postgresql.conf.sample
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: mjolnirdb2024
        POSTGRES_DB: sinarm
      restart: unless-stopped
      networks:
        - sys_db_network

  stormbreakerdb:
      image: postgres:alpine
      container_name: stormbreakerdb
      hostname: stormbreakerdb
      volumes:
        - stormbreaker-data:/var/lib/postgresql/data
        - ${PWD}/src/configs/postgresql.conf:/usr/local/share/postgresql/postgresql.conf.sample
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: stormbreakerdb2024
        POSTGRES_DB: sinarm
      restart: unless-stopped
      networks:
        - sys_db_network

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070"
    volumes:
      - zookeeperdb:/data
    restart: unless-stopped
    networks:
      - sys_db_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - kafkadb:/var/lib/kafka/data/
    restart: unless-stopped
    networks:
      - sys_db_network

  schema-registry:
      image: confluentinc/cp-schema-registry:latest
      container_name: schema-registry
      links:
        - zookeeper
        - kafka
      environment:
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_LISTENERS: http://schema-registry:6060
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      ports:
        - 6060:6060
      networks:
        - sys_db_network

  connect:
    image: quay.io/debezium/connect:2.7
    container_name: debezium-connect
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my-connect-configs
      OFFSET_STORAGE_TOPIC: my-connect-offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    volumes:
      - ${PWD}/src/scripts/getAvroPackages.sh:/kafka/getAvroPackages.sh
    entrypoint: ['/kafka/getAvroPackages.sh']
    links:
      - zookeeper
      - kafka
      - thordb
      - mjolnirdb
      - stormbreakerdb
      - schema-registry
    ports:
      - 8083:8083
    restart: unless-stopped
    networks:
      - sys_db_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: primary
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect:8083
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:6060
    ports:
      - 4040:8080
    depends_on:
      - zookeeper
      - kafka
      - connect
    networks:
      - sys_db_network

networks:
  sys_db_network:
    driver: bridge

volumes:
  kafkadb:
    driver: local
  zookeeperdb:
    driver: local
  thor-data:
    driver: local
  mjolnir-data:
    driver: local
  stormbreaker-data:
    driver: local

