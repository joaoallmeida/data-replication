name: sys-db-replication

services:
  primarydb:
      container_name: primarydb
      hostname: primarydb
      image: postgres:alpine
      volumes:
        - postgresPrimaryDB:/var/lib/postgresql/data
        - ${PWD}/src/configs/postgresql.conf:/usr/local/share/postgresql/postgresql.conf.sample
        - ${PWD}/src/scripts/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: primarydb2024
      restart: unless-stopped
      networks:
        - sys_db_network

  replicadb:
      image: postgres:alpine
      container_name: replicadb
      hostname: replicadb
      volumes:
        - postgresReplicaDB:/var/lib/postgresql/data
        - ${PWD}/src/configs/postgresql.conf:/usr/local/share/postgresql/postgresql.conf.sample
        - ${PWD}/src/scripts/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: replicadb2024
      restart: unless-stopped
      networks:
        - sys_db_network

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070"
    volumes:
      - zookeeperdb:/data
    restart: unless-stopped
    networks:
      - sys_db_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper
    volumes:
      - kafkadb:/bitnami
    restart: unless-stopped
    networks:
      - sys_db_network

  connect:
    image: debezium/connect
    container_name: debezium-connect
    environment:
        BOOTSTRAP_SERVERS: kafka:9092
        GROUP_ID: 1
        CONFIG_STORAGE_TOPIC: my-connect-configs
        OFFSET_STORAGE_TOPIC: my-connect-offsets
        STATUS_STORAGE_TOPIC: my_connect_statuses
    links:
        - zookeeper
        - kafka
        - primarydb
        - replicadb
    ports:
        - 8083:8083
    depends_on:
      - zookeeper
      - kafka
    restart: unless-stopped
    networks:
      - sys_db_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: primary
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect:8083
    ports:
      - 4040:8080
    depends_on:
      - zookeeper
      - kafka
      - connect
    networks:
      - sys_db_network

networks:
  sys_db_network:
    driver: bridge

volumes:
  kafkadb:
    driver: local
  zookeeperdb:
    driver: local
  postgresPrimaryDB:
    driver: local
  postgresReplicaDB:
    driver: local

